{"version":3,"file":"component---src-pages-index-js-d3dbc3b0aed35be5529e.js","mappings":"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","sources":["webpack://personal.log/./src/components/buttons/DropDownButton.js","webpack://personal.log/./src/components/post/PostListItem.js","webpack://personal.log/./src/components/buttons/TextButton.js","webpack://personal.log/./src/components/post/Pagination.js","webpack://personal.log/./src/components/post/PostList.js","webpack://personal.log/./src/hooks/usePostList.js","webpack://personal.log/./src/pages/index.js"],"sourcesContent":["// DropDown Icon Button Component\r\nimport React, { useState, useRef, useEffect } from \"react\";\r\nimport { styled } from \"../../styles/Theme\";\r\n// Components\r\nimport IconButton from \"./IconButton\";\r\n\r\nconst DDIconButton = ({ className, onClick, size = [30, 30], list, icon }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const menuRef = useRef(null);\r\n\r\n  // 드롭다운 토글\r\n  const toggleMenu = () => {\r\n    setIsOpen((prev) => !prev);\r\n  };\r\n\r\n  // 외부 클릭 시 드롭다운 닫기\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  return (\r\n    <DropDownContainer className={className} ref={menuRef}>\r\n      <IconButton size={size} onClick={toggleMenu} icon={icon} />\r\n      {isOpen && (\r\n        <DropdownList size={size}>\r\n          {list.map((item, index) => (\r\n            <DropdownItem\r\n              key={index}\r\n              onClick={() => {\r\n                onClick(item);\r\n                setIsOpen(false);\r\n              }}\r\n            >\r\n              {item}\r\n            </DropdownItem>\r\n          ))}\r\n        </DropdownList>\r\n      )}\r\n    </DropDownContainer>\r\n  );\r\n};\r\n\r\nconst DropDownContainer = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nconst DropdownList = styled.div`\r\n  z-index: 100;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 8px 0;\r\n  position: absolute;\r\n  top: ${({ size }) => size[1] - 5}px;\r\n  right: 10px;\r\n  background-color: ${({ theme }) => theme.btn};\r\n  border-radius: 0.25rem;\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst DropdownItem = styled.div`\r\n  padding: 8px 16px;\r\n  color: ${({ theme }) => theme.btnText};\r\n  font-size: 0.75rem;\r\n  font-weight: bolder;\r\n  white-space: nowrap;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.btnActive};\r\n    color: ${({ theme }) => theme.btnActiveText};\r\n  }\r\n`;\r\n\r\nexport default DDIconButton;\r\n","// Post List Item Component\r\nimport React from \"react\";\r\nimport { navigate } from \"gatsby\";\r\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\r\nimport { styled } from \"../../styles/Theme\";\r\n// Assets\r\nimport { CategoryIcon, DateIcon, TagsIcon } from \"../../assets/assets\";\r\n\r\nconst PostListItem = ({ className, post }) => {\r\n  return (\r\n    <Wrapper className={className} onClick={() => navigate(`/post/${post?.slug}`)}>\r\n      <Img image={getImage(post?.coverImage)} alt=\"_thumbnail\" />\r\n      <TextContainer>\r\n        <TitleText>{post?.title}</TitleText>\r\n        <Text>\r\n          <CategoryIcon />\r\n          {post?.category}\r\n          <DateIcon />\r\n          {post?.createDate}\r\n        </Text>\r\n        <TagContainer>\r\n          <TagsIcon />\r\n          {post?.tag.map((tag) => (\r\n            <TagItem key={tag}>{tag}</TagItem>\r\n          ))}\r\n        </TagContainer>\r\n      </TextContainer>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin: 0 0 2rem;\r\n  width: 100%;\r\n  cursor: pointer;\r\n\r\n  :hover h4 {\r\n    color: ${({ theme }) => theme.highlightText};\r\n    transition: color 0.3s ease-in-out;\r\n  }\r\n\r\n  :hover img {\r\n    transform: scale(1.125);\r\n    transition: transform 0.3s ease-in-out;\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.975);\r\n  }\r\n\r\n  // 0 ~ 480px\r\n  @media (max-width: 480px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nconst Img = styled(GatsbyImage)`\r\n  flex-shrink: 0;\r\n  margin: 0 1.75rem 0 0;\r\n  width: 10rem;\r\n  min-height: 7.5rem;\r\n  border-radius: 0.75rem;\r\n  overflow: hidden;\r\n  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.5);\r\n\r\n  // 0 ~ 480px\r\n  @media (max-width: 480px) {\r\n    margin-left: 10%;\r\n    width: 90%;\r\n    height: 9rem;\r\n  }\r\n\r\n  img {\r\n    object-fit: cover !important;\r\n    object-position: center !important;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst TextContainer = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 0.5rem 0;\r\n  padding: 0 0.75rem 0 0;\r\n  width: 100%;\r\n  overflow: hidden;\r\n\r\n  // 0 ~ 480px\r\n  @media (max-width: 480px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nconst TitleText = styled.h4`\r\n  margin: 0;\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.text};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  word-break: break-all;\r\n  text-shadow: 0px 1px 3px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst Text = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  height: 2rem;\r\n  color: ${({ theme }) => theme.bgText};\r\n  font-weight: bolder;\r\n  text-shadow: 0px 1px 3px rgba(0, 0, 0, 0.1);\r\n\r\n  svg {\r\n    flex-shrink: 0;\r\n    margin: 0 0.5rem 0 1rem;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    fill: ${({ theme }) => theme.bgText};\r\n  }\r\n\r\n  svg:first-of-type {\r\n    margin: 0 0.5rem 0 0;\r\n  }\r\n`;\r\n\r\nconst TagContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  margin-top: 0.25rem;\r\n  width: 100%;\r\n  min-height: 1.75rem;\r\n\r\n  svg {\r\n    flex-shrink: 0;\r\n    margin: 0.3rem 0.3rem 0 0;\r\n    width: 1rem;\r\n    height: 1rem;\r\n    fill: ${({ theme }) => theme.bgText};\r\n  }\r\n`;\r\n\r\nconst TagItem = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 0 0.5rem 0.5rem 0;\r\n  padding: 0 0.5rem;\r\n  height: 1.5rem;\r\n  background-color: ${({ theme }) => theme.btnActiveText};\r\n  color: ${({ theme }) => theme.btnActive};\r\n  font-size: 0.9rem;\r\n  font-weight: bolder;\r\n  border-radius: 0.25rem;\r\n  box-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport default PostListItem;\r\n","// Text Button Component\r\nimport React from \"react\";\r\nimport { styled } from \"../../styles/Theme\";\r\n\r\nconst TextButton = ({ className, size = [80, 30], text, onClick }) => {\r\n  return (\r\n    <ButtonContainer className={className} onClick={onClick} width={size[0]} height={size[1]}>\r\n      {text}\r\n    </ButtonContainer>\r\n  );\r\n};\r\n\r\nconst ButtonContainer = styled.button`\r\n  z-index: 10;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 10px;\r\n  padding: 0;\r\n  width: ${({ width }) => width}px;\r\n  height: ${({ height }) => height}px;\r\n  background-color: ${({ theme }) => theme.btn};\r\n  color: ${({ theme }) => theme.btnText};\r\n  font-size: 0.9rem;\r\n  font-weight: bolder;\r\n  border: none;\r\n  border-radius: 0.25rem;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.btnActive};\r\n    color: ${({ theme }) => theme.btnActiveText};\r\n  }\r\n\r\n  &:active {\r\n    transform: scale(0.9);\r\n  }\r\n`;\r\n\r\nexport default TextButton;\r\n","// Pagination Component\r\nimport React, { useEffect } from \"react\";\r\nimport { styled } from \"../../styles/Theme\";\r\n// Assets\r\nimport { PrevIcon, PrevShiftIcon, NextIcon, NextShiftIcon } from \"../../assets/assets\";\r\n// Components\r\nimport IconButton from \"../buttons/IconButton\";\r\nimport TextButton from \"../buttons/TextButton\";\r\n\r\nconst Pagination = ({ totalPageSize, nowPage, onPageChange }) => {\r\n  const maxLange = 5; // Pagination 숫자 버튼 개수\r\n\r\n  const getPageNumbers = () => {\r\n    const numberArray = [];\r\n    const start = Math.max(1, nowPage - Math.floor(maxLange / 2));\r\n    const end = Math.min(totalPageSize, start + maxLange - 1);\r\n    const newStart = Math.max(1, end - maxLange + 1);\r\n\r\n    for (let i = newStart; i <= end; i++) {\r\n      numberArray.push(i);\r\n    }\r\n    return numberArray;\r\n  };\r\n\r\n  // 현재 페이지가 totalPageSize를 초과하지 않도록 보정\r\n  useEffect(() => {\r\n    if (nowPage > totalPageSize) {\r\n      onPageChange(totalPageSize || 1);\r\n    }\r\n  }, [totalPageSize, nowPage, onPageChange]);\r\n\r\n  const pageNumbers = getPageNumbers();\r\n\r\n  return (\r\n    <Wrapper>\r\n      <MoveButton size={[20, 20]} icon={PrevShiftIcon} onClick={() => onPageChange(1)} />\r\n      <MoveButton size={[20, 20]} icon={PrevIcon} onClick={() => onPageChange(Math.max(1, nowPage - 1))} />\r\n      <NumberButtons>\r\n        {pageNumbers.map((page) => (\r\n          <NumberButton\r\n            key={page}\r\n            size={[30, 30]}\r\n            text={page}\r\n            $onPage={page === nowPage}\r\n            onClick={() => onPageChange(page)}\r\n          />\r\n        ))}\r\n      </NumberButtons>\r\n      <MoveButton size={[20, 20]} icon={NextIcon} onClick={() => onPageChange(Math.min(totalPageSize, nowPage + 1))} />\r\n      <MoveButton size={[20, 20]} icon={NextShiftIcon} onClick={() => onPageChange(totalPageSize)} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  color: ${({ theme }) => theme.text};\r\n  text-align: center;\r\n`;\r\n\r\nconst MoveButton = styled(IconButton)`\r\n  margin: 0 0.1rem;\r\n  border-radius: 50%;\r\n\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.bgSub};\r\n  }\r\n  &:active {\r\n    background-color: ${({ theme }) => theme.btnActive};\r\n  }\r\n`;\r\n\r\nconst NumberButtons = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst NumberButton = styled(TextButton)`\r\n  margin: 0;\r\n  background-color: ${({ $onPage }) => ($onPage ? \"\" : \"transparent\")};\r\n  text-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);\r\n`;\r\n\r\nexport default Pagination;\r\n","// Post List Component\r\nimport React, { useState, useMemo } from \"react\";\r\nimport { styled } from \"../../styles/Theme\";\r\nimport { SortTable } from \"../../../user-data\";\r\n// Assets\r\nimport { SortIcon } from \"../../assets/assets\";\r\n// Components\r\nimport DDIconButton from \"../../components/buttons/DropDownButton\";\r\nimport PostListItem from \"./PostListItem\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nconst PostList = ({ className, postlist, listName }) => {\r\n  const [sorting, setSorting] = useState(SortTable[0]); // 정렬 기준\r\n  const [nowPage, setNowPage] = useState(1); // 현재 페이지 (default 1)\r\n  const pageSize = 10; // 페이지당 포스트 개수\r\n\r\n  // 정렬된 게시물 계산\r\n  const sortedPosts = useMemo(() => {\r\n    const sorted = [...postlist];\r\n    if (sorting === \"Latest\") {\r\n      return sorted.sort((a, b) => new Date(b.createDate) - new Date(a.createDate)); // 최신순\r\n    } else if (sorting === \"Oldest\") {\r\n      return sorted.sort((a, b) => new Date(a.createDate) - new Date(b.createDate)); // 오래된순\r\n    }\r\n    return sorted;\r\n  }, [postlist, sorting]);\r\n\r\n  // 현재 페이지에 표시될 게시물 계산\r\n  const nowPosts = useMemo(() => {\r\n    const startIdx = (nowPage - 1) * pageSize;\r\n    return sortedPosts.slice(startIdx, startIdx + pageSize);\r\n  }, [sortedPosts, nowPage, pageSize]);\r\n\r\n  return (\r\n    <ListContainer className={className}>\r\n      {listName && (\r\n        <ListHeader>\r\n          <ListName>\r\n            {listName}\r\n            <PostsNum>{` (${sortedPosts?.length})` || `-`}</PostsNum>\r\n          </ListName>\r\n          <SortButton\r\n            size={[30, 30]}\r\n            icon={SortIcon}\r\n            list={SortTable}\r\n            onClick={(option) => {\r\n              setSorting(option);\r\n              setNowPage(1); // 정렬 변경 시 첫 페이지로 이동\r\n            }}\r\n          />\r\n        </ListHeader>\r\n      )}\r\n      <BorderLine />\r\n      <PostListContainer>\r\n        {nowPosts?.length > 0 ? (\r\n          nowPosts?.map((post) => <PostListItem key={post?.slug} post={post} />)\r\n        ) : (\r\n          <NoResultsText>No results found</NoResultsText>\r\n        )}\r\n      </PostListContainer>\r\n      {nowPosts?.length > 0 ? (\r\n        <>\r\n          <BorderLine />\r\n          <Pagination\r\n            totalPageSize={Math.ceil(sortedPosts.length / pageSize)}\r\n            nowPage={nowPage}\r\n            onPageChange={setNowPage}\r\n          />\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </ListContainer>\r\n  );\r\n};\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  // 0 ~ 1279px\r\n  @media (max-width: 1279px) {\r\n    width: 95%;\r\n  }\r\n`;\r\n\r\nconst BorderLine = styled.div`\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: ${({ theme }) => theme.brLine};\r\n`;\r\n\r\nconst ListHeader = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n  justify-content: space-between;\r\n  text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst ListName = styled.h2`\r\n  margin: 0;\r\n`;\r\n\r\nconst PostsNum = styled.span`\r\n  color: ${({ theme }) => theme.bgText};\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst SortButton = styled(DDIconButton)`\r\n  z-index: 10;\r\n`;\r\n\r\nconst PostListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst NoResultsText = styled.p`\r\n  margin: 0 0 2rem;\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.highlightText};\r\n  font-size: 1.2rem;\r\n`;\r\n\r\nexport default PostList;\r\n","import { useMemo } from \"react\";\r\n\r\nconst usePostList = (data) => {\r\n  return useMemo(\r\n    () =>\r\n      data?.allMarkdownRemark?.edges?.map(({ node }) => ({\r\n        title: node.frontmatter.title,\r\n        coverImage: node.frontmatter.coverImage?.childImageSharp?.gatsbyImageData,\r\n        tag: node.frontmatter.tag,\r\n        category: node.frontmatter.category,\r\n        createDate: node.frontmatter.createDate,\r\n        slug: node.fields.slug,\r\n      })) || [],\r\n    [data]\r\n  );\r\n};\r\n\r\nexport default usePostList;\r\n","// Main Page\r\nimport React from \"react\";\r\nimport { graphql, navigate } from \"gatsby\";\r\nimport { styled } from \"../styles/Theme\";\r\nimport userData from \"../../user-data\";\r\n// Hooks\r\nimport usePostList from \"../hooks/usePostList\";\r\n// Components\r\nimport PostList from \"../components/post/PostList\";\r\n\r\nconst IndexPage = ({ data }) => {\r\n  if (!data) {\r\n    navigate(`/404`);\r\n  }\r\n  const postList = usePostList(data);\r\n\r\n  return (\r\n    <PageWrapper>\r\n      <PostList postlist={postList} listName={\"All Posts\"} />\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nconst PageWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 30px;\r\n  width: 768px;\r\n\r\n  // 0 ~ 768px\r\n  @media (max-width: 768px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n\r\nexport const query = graphql`\r\n  query MainPageQuery {\r\n    allMarkdownRemark(sort: { fields: frontmatter___createDate, order: DESC }) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            title\r\n            coverImage {\r\n              childImageSharp {\r\n                gatsbyImageData(placeholder: BLURRED, formats: [AUTO, WEBP])\r\n              }\r\n            }\r\n            tag\r\n            category\r\n            createDate\r\n          }\r\n          fields {\r\n            slug\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Head = () => <title>{userData.title}</title>;\r\n\r\nexport default IndexPage;\r\n"],"names":["DropDownContainer","styled","div","DropdownList","_ref2","size","_ref3","theme","btn","DropdownItem","_ref4","btnText","_ref5","btnActive","_ref6","btnActiveText","_ref","className","onClick","list","icon","isOpen","setIsOpen","useState","menuRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","React","ref","IconButton","toggleMenu","prev","map","item","index","key","Wrapper","highlightText","Img","GatsbyImage","TextContainer","TitleText","h4","text","Text","p","bgText","TagContainer","TagItem","_ref7","_ref8","post","navigate","slug","image","getImage","coverImage","alt","title","CategoryIcon","category","DateIcon","createDate","TagsIcon","tag","ButtonContainer","button","width","height","MoveButton","bgSub","NumberButtons","NumberButton","TextButton","$onPage","totalPageSize","nowPage","onPageChange","pageNumbers","getPageNumbers","numberArray","start","Math","max","floor","maxLange","end","min","i","push","PrevShiftIcon","PrevIcon","page","NextIcon","NextShiftIcon","ListContainer","BorderLine","brLine","ListHeader","ListName","h2","PostsNum","span","SortButton","DDIconButton","PostListContainer","NoResultsText","postlist","listName","sorting","setSorting","SortTable","setNowPage","sortedPosts","useMemo","sorted","_toConsumableArray","sort","a","b","Date","nowPosts","startIdx","slice","length","SortIcon","option","PostListItem","Pagination","ceil","data","_data$allMarkdownRema","_data$allMarkdownRema2","allMarkdownRemark","edges","_node$frontmatter$cov","_node$frontmatter$cov2","node","frontmatter","childImageSharp","gatsbyImageData","fields","PageWrapper","Head","userData","postList","usePostList","PostList"],"sourceRoot":""}